diff --git a/metadata.json b/metadata.json
index e4f865a..4c25698 100644
--- a/metadata.json
+++ b/metadata.json
@@ -1,5 +1,5 @@
 {
-	"localedir":"/usr/local/share/locale",
+	"localedir":"/usr/share/locale",
 	"shell-version": [
 	"3.10",
 	"3.12",
@@ -8,11 +8,12 @@
 	"3.18",
 	"3.20",
 	"3.22",
-	"3.24"
-	], 
-	"uuid": "cpupower@mko-sl.de", 
+	"3.24",
+	"3.26"
+	],
+	"uuid": "cpupower@mko-sl.de",
 	"name": "CPU Power Manager",
-	"url": "https://github.com/martin31821/cpupower", 
+	"url": "https://github.com/martin31821/cpupower",
 	"description": "Manage Intel_pstate CPU Frequency scaling driver",
 	"schema": "org.gnome.shell.extensions.cpupower"
 }
diff --git a/src/baseindicator.js b/src/baseindicator.js
index 47cc1aa..adb09b7 100644
--- a/src/baseindicator.js
+++ b/src/baseindicator.js
@@ -41,7 +41,7 @@ const Me = ExtensionUtils.getCurrentExtension();
 const Convenience = Me.imports.src.convenience;
 const SETTINGS_ID = 'org.gnome.shell.extensions.cpupower';
 
-const CPUFreqBaseIndicator = new Lang.Class({
+var CPUFreqBaseIndicator = new Lang.Class({
     Name: 'cpupower.CPUFreqBaseIndicator',
     Extends: PanelMenu.Button,
     Abstract: true,
diff --git a/src/indicator.js b/src/indicator.js
index bc16bd7..0e34fd6 100644
--- a/src/indicator.js
+++ b/src/indicator.js
@@ -50,7 +50,7 @@ const EXTENSIONDIR = Me.dir.get_path();
 const CPUFREQCTL = EXTENSIONDIR + '/src/cpufreqctl';
 const PKEXEC = GLib.find_program_in_path('pkexec');
 
-const CPUFreqIndicator = new Lang.Class({
+var CPUFreqIndicator = new Lang.Class({
     Name: 'cpupower.CPUFreqIndicator',
     Extends: CPUFreqBaseIndicator,
 
@@ -64,15 +64,15 @@ const CPUFreqIndicator = new Lang.Class({
         // read the last-settings file.
         if(!GLib.file_test(EXTENSIONDIR + '/.last-settings', GLib.FileTest.EXISTS))
         {
-            let result = GLib.spawn_command_line_sync(CPUFREQCTL + ' turbo get', this.out);
+            let result = GLib.spawn_command_line_sync(CPUFREQCTL + ' turbo get');
             let returnCode = result[1];
             this.isTurboBoostActive = returnCode;
 
-            result = GLib.spawn_command_line_sync(CPUFREQCTL + ' min get', this.out);
+            result = GLib.spawn_command_line_sync(CPUFREQCTL + ' min get');
             returnCode = result[1];
             this.minVal = returnCode;
 
-            result = GLib.spawn_command_line_sync(CPUFREQCTL + ' max get', this.out);
+            result = GLib.spawn_command_line_sync(CPUFREQCTL + ' max get');
             returnCode = result[1];
             this.maxVal = returnCode;
         }
@@ -89,6 +89,19 @@ const CPUFreqIndicator = new Lang.Class({
                 this._updateTurbo(true);
             }
         }
+
+        let result = GLib.spawn_command_line_sync(CPUFREQCTL + ' turbo get');
+        let returnCode = result[1];
+        this.isTurboBoostActive = returnCode;
+
+        result = GLib.spawn_command_line_sync(CPUFREQCTL + ' min get');
+        returnCode = result[1];
+        this.minVal = returnCode;
+
+        result = GLib.spawn_command_line_sync(CPUFREQCTL + ' max get');
+        returnCode = result[1];
+        this.maxVal = returnCode;
+
         this.parent();
     },
 
@@ -250,7 +263,7 @@ const CPUFreqIndicator = new Lang.Class({
     _updateFile: function()
     {
         let cmd = Math.floor(this.minVal) + '\n' + Math.floor(this.maxVal) + '\n' + (this.isTurboBoostActive ? 'true':'false') + '\n';
-        let path = EXTENSIONDIR + '/.last-settings';
+		let path = EXTENSIONDIR + '/.last-settings';
         GLib.file_set_contents(path, cmd);
     },
 
@@ -306,6 +319,7 @@ const CPUFreqIndicator = new Lang.Class({
 
     _updateFreq: function()
     {
+        let cpufreq = 0, cpucount = 0;
         let lines = Shell.get_file_contents_utf8_sync('/proc/cpuinfo').split('\n');
         for(let i = 0; i < lines.length; i++)
         {
@@ -313,14 +327,17 @@ const CPUFreqIndicator = new Lang.Class({
 
             if(line.search(/cpu mhz/i) < 0)
                 continue;
-            this.cpufreq = parseInt(line.substring(line.indexOf(':') + 2));
-            this.imCurrentLabel.set_text(this._getCurFreq());
-            if(this.lblActive)
-                this.lbl.set_text(this._getCurFreq());
-            else
-                this.lbl.set_text('');
-            break;
+
+			let f = Shell.get_file_contents_utf8_sync('/sys/devices/system/cpu/cpu' + cpucount++ + '/cpufreq/scaling_cur_freq');
+			cpufreq += parseInt(f / 1024);
         }
+		this.cpufreq = (cpufreq / cpucount)
+		this.imCurrentLabel.set_text(this._getCurFreq());
+		if(this.lblActive)
+			this.lbl.set_text(this._getCurFreq());
+		else
+			this.lbl.set_text('');
+
         return true;
     },
 
diff --git a/src/notinstalled.js b/src/notinstalled.js
index 86f7c35..02ec58d 100644
--- a/src/notinstalled.js
+++ b/src/notinstalled.js
@@ -41,7 +41,7 @@ const SETTINGS_ID = 'org.gnome.shell.extensions.cpupower';
 const Gettext = imports.gettext.domain('gnome-shell-extension-cpupower');
 const _ = Gettext.gettext;
 
-const NotInstalledIndicator = new Lang.Class({
+var NotInstalledIndicator = new Lang.Class({
     Name: 'cpupower.CPUFreqNotInstalledIndicator',
     Extends: CPUFreqBaseIndicator,
 
diff --git a/src/preferences.js b/src/preferences.js
index 7ec9c20..cb6f91b 100644
--- a/src/preferences.js
+++ b/src/preferences.js
@@ -44,7 +44,7 @@ const EXTENSIONDIR = Me.dir.get_path();
 const GLADE_FILE = EXTENSIONDIR + "/data/cpupower-preferences.glade";
 const SETTINGS_SCHEMA = 'org.gnome.shell.extensions.cpupower';
 
-const CPUPowerPreferences = new Lang.Class({
+var CPUPowerPreferences = new Lang.Class({
     Name: 'cpupower.Preferences',
 
     _init: function()
diff --git a/src/profile.js b/src/profile.js
index e851f93..4584ddb 100644
--- a/src/profile.js
+++ b/src/profile.js
@@ -32,7 +32,7 @@ const GenerateUUID = function ()
     return Math.floor(1 + Math.random() * 0xFFFFFFFE).toString();
 };
 
-const CPUFreqProfile = new Lang.Class({
+var CPUFreqProfile = new Lang.Class({
     Name: 'cpupower.CPUFreqProfile',
 
     _init: function()
diff --git a/src/profilebutton.js b/src/profilebutton.js
index 39e0f9c..431884e 100644
--- a/src/profilebutton.js
+++ b/src/profilebutton.js
@@ -32,7 +32,7 @@ const PopupMenu = imports.ui.popupMenu;
 
 const DEFAULT_EMPTY_NAME = 'No name';
 
-const CPUFreqProfileButton = new Lang.Class({
+var CPUFreqProfileButton = new Lang.Class({
     Name: 'cpupower.CPUFreqProfileButton',
     Extends: PopupMenu.PopupMenuItem,
 
diff --git a/src/unsupported.js b/src/unsupported.js
index a9719fd..1f7a184 100644
--- a/src/unsupported.js
+++ b/src/unsupported.js
@@ -39,7 +39,7 @@ const Gettext = imports.gettext.domain('gnome-shell-extension-cpupower');
 const _ = Gettext.gettext;
 
 
-const UnsupportedIndicator = new Lang.Class({
+var UnsupportedIndicator = new Lang.Class({
     Name: 'cpupower.CPUFreqUnsupportedIndicator',
     Extends: CPUFreqBaseIndicator,
 
