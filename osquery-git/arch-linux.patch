diff --git a/tools/provision.sh b/tools/provision.sh
index c363196..31019ff 100755
--- a/tools/provision.sh
+++ b/tools/provision.sh
@@ -83,6 +83,8 @@ function main() {
     log "your $OS does not use a provision script"
   fi

+  exit
+
   # The dependency directory (DEPS_DIR) will contain our legacy runtime glibc
   # and various compilers/library dependencies.
   if [[ ! -d "$DEPS_DIR" ]]; then
diff --git a/osquery/tables/CMakeLists.txt b/osquery/tables/CMakeLists.txt
index bda94a8..d4631f3 100644
--- a/osquery/tables/CMakeLists.txt
+++ b/osquery/tables/CMakeLists.txt
@@ -76,8 +76,8 @@ else()
   ADD_OSQUERY_LINK_ADDITIONAL("magic")
   ADD_OSQUERY_LINK_ADDITIONAL("tsk")

-  ADD_OSQUERY_LINK_ADDITIONAL("apt-pkg dpkg lzma lz4 bz2")
-  ADD_OSQUERY_LINK_ADDITIONAL("rpm rpmio beecrypt popt db")
+  #ADD_OSQUERY_LINK_ADDITIONAL("apt-pkg dpkg lzma lz4 bz2")
+  #ADD_OSQUERY_LINK_ADDITIONAL("rpm rpmio beecrypt popt db")
 endif()

 if(APPLE OR LINUX)
diff --git a/specs/windows/services.table b/specs/windows/services.table
index 3acf0c5..bd7612b 100644
--- a/specs/windows/services.table
+++ b/specs/windows/services.table
@@ -12,7 +12,7 @@ schema([
     Column("path", TEXT, "Path to Service Executable"),
     Column("module_path", TEXT, "Path to ServiceDll"),
     Column("description", TEXT, "Service Description"),
-    Column("user_account", TEXT, "The name of the account that the service process will be logged on as when it runs. This name can be of the form Domain\UserName. If the account belongs to the built-in domain, the name can be of the form .\UserName."),
+    Column("user_account", TEXT, "The name of the account that the service process will be logged on as when it runs. This name can be of the form Domain\\UserName. If the account belongs to the built-in domain, the name can be of the form .\\UserName."),
 ])
 implementation("system/windows/services@genServices")
 examples([
diff --git a/CMakeLists.txt b/CMakeLists.txt
index 64b1bd8a..dd7b924f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -360,7 +360,7 @@ elseif(OSQUERY_BUILD_PLATFORM STREQUAL "windows")
   LOG_PLATFORM("Windows")
 endif()

-if("${OSQUERY_BUILD_DISTRO}" MATCHES "^(centos|rhel|scientific|oracle)7$")
+if("${OSQUERY_BUILD_DISTRO}" MATCHES "^(centos|rhel|scientific|oracle)7$|arch")
   # Useful for libudev version detection.
   set(SYSTEMD TRUE)
 endif()
diff --git a/osquery/extensions/CMakeLists.txt b/osquery/extensions/CMakeLists.txt
index 5147c1a9..1c072e4c 100644
--- a/osquery/extensions/CMakeLists.txt
+++ b/osquery/extensions/CMakeLists.txt
@@ -1,7 +1,7 @@
 # Generate the thrift intermediate/interface code.
 add_custom_command(
   COMMAND
-    ${THRIFT_COMPILER} --gen cpp:dense --gen py:dense "${CMAKE_SOURCE_DIR}/osquery.thrift"
+    ${THRIFT_COMPILER} --gen cpp --gen py "${CMAKE_SOURCE_DIR}/osquery.thrift"
   DEPENDS "${CMAKE_SOURCE_DIR}/osquery.thrift"
   WORKING_DIRECTORY "${CMAKE_BINARY_DIR}/generated"
   OUTPUT ${OSQUERY_THRIFT_GENERATED_FILES}
diff --git a/include/osquery/core.h b/include/osquery/core.h
index a367f913..c522d558 100644
--- a/include/osquery/core.h
+++ b/include/osquery/core.h
@@ -15,8 +15,9 @@
 #include <string>
 #include <vector>

-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__linux__)
 #include <boost/thread/shared_mutex.hpp>
+#include <boost/thread/recursive_mutex.hpp>
 #else
 #include <shared_mutex>
 #endif
@@ -182,7 +183,7 @@ inline bool isPlatform(PlatformType a, const PlatformType& t = kPlatformType) {
   return (static_cast<int>(t) & static_cast<int>(a)) != 0;
 }

-#if defined(__APPLE__) || defined(__FreeBSD__)
+#if defined(__APPLE__) || defined(__FreeBSD__) || defined(__linux__)
 #define MUTEX_IMPL boost
 #else
 #define MUTEX_IMPL std
@@ -198,8 +199,8 @@ using WriteLock = MUTEX_IMPL::unique_lock<Mutex>;
 using ReadLock = MUTEX_IMPL::shared_lock<Mutex>;

 /// Helper alias for defining recursive mutexes.
-using RecursiveMutex = std::recursive_mutex;
+using RecursiveMutex = MUTEX_IMPL::recursive_mutex;

 /// Helper alias for write locking a recursive mutex.
-using RecursiveLock = std::lock_guard<std::recursive_mutex>;
+using RecursiveLock = MUTEX_IMPL::lock_guard<MUTEX_IMPL::recursive_mutex>;
 }
diff --git a/osquery/CMakeLists.txt b/osquery/CMakeLists.txt
index 4c8ac8ca..195450da 100644
--- a/osquery/CMakeLists.txt
+++ b/osquery/CMakeLists.txt
@@ -55,7 +55,7 @@ if(WINDOWS)
   ADD_OSQUERY_LINK_CORE("ssleay32")
   ADD_OSQUERY_LINK_CORE("eay32")
   ADD_OSQUERY_LINK_CORE("zlibstatic")
-
+
   # Enable control flow guard
   ADD_OSQUERY_LINK_CORE("-guard:cf")
 else()
@@ -69,10 +69,11 @@ endif()

 if(APPLE OR LINUX)
   ADD_OSQUERY_LINK_CORE("libdl")
-  ADD_OSQUERY_LINK_CORE("boost_system-mt")
-  ADD_OSQUERY_LINK_CORE("boost_filesystem-mt")
+  ADD_OSQUERY_LINK_CORE("boost_system")
+  ADD_OSQUERY_LINK_CORE("boost_filesystem")
+  ADD_OSQUERY_LINK_CORE("boost_thread")
   ADD_OSQUERY_LINK_ADDITIONAL("rocksdb_lite")
-  ADD_OSQUERY_LINK_ADDITIONAL("boost_regex-mt")
+  ADD_OSQUERY_LINK_ADDITIONAL("boost_regex")
 elseif(FREEBSD)
   ADD_OSQUERY_LINK_CORE("icuuc")
   ADD_OSQUERY_LINK_CORE("boost_system")
